version: '3.8'

services:
  # redis:
  #   extends:
  #     file: ./backend/.docker/production/redis.yml
  #     service: redis

  # backend:
  #   extends:
  #     file: ./backend/.docker/production/production.yml
  #     service: backend

  # db:
  #   extends:
  #     file: ./backend/.docker/production/db.yml
  #     service: db

  # frontend:
  #   extends:
  #     file: ./frontend/.docker/production/production.yml
  #     service: frontend

  # aqa:
  #   extends:
  #     file: ./aqa/.docker/production/production.yml
  #     service: aqa

  traefik:
    image: traefik:v2.6
    command:
      - "--api.dashboard=true"
      - "--api.insecure=false"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.email=${ACME_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--log.level=DEBUG"
    ports:
      - "80:80"
      - "443:443"
      - "8081:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`traefik.qa-challenge.dan1d.dev`)"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls=true"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=myresolver"
      - "traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080"


volumes:
  pgdata:
  letsencrypt:

networks:
  default:
    name: dan1d_dev_network
    driver: bridge
